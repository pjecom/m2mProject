<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.m2m.bo.co.mapper.MenuMapper">
	<select id="getListMenu" parameterType="com.m2m.bo.co.model.MenuVO" resultType="com.m2m.bo.co.model.MenuTreeVO">
		/* menu.getListMenu	*/
		SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
		SELECT
			  CAST(MENU_NO AS VARCHAR)as id
			  ,MENU_NM as text
			  ,CAST(UPPER_MENU_NO AS VARCHAR) as parent
			  ,MENU_NO
		      ,SYS_SE_CODE
		      ,UPPER_MENU_NO
		      ,MENU_LEVEL
		      ,MENU_NM
		      ,MENU_DC
		      ,MENU_URL
		      ,MENU_ORDR
		      ,USE_AT
		      ,DELETE_AT
		      ,DELETE_DT
		      ,FRST_REGISTER_ID
		      ,FRST_REGIST_DT
		      ,LAST_CHANGER_ID
		      ,LAST_CHANGE_DT
		  FROM CO_MENU_BAS
		  WHERE 1=1
		  <choose>
		  	<when test="sysSeCode == 'FO'">
				AND SYS_SE_CODE IN ('FO','MO')
		  	</when>
		  	<otherwise>
		  		AND SYS_SE_CODE IN ('BO','MBO')
		  	</otherwise>
		  </choose>
		  AND UPPER_MENU_NO IS NOT NULL
		  AND DELETE_AT != 'Y'
		  ORDER BY MENU_ORDR
	</select>

	<select id="getSideBarMenu" resultType="com.m2m.bo.co.model.MenuVO" parameterType="java.util.Map">
		/* menu.getSideBarMenu	*/
		WITH USER_MENU_LIST(USER_ID, MENU_NO, UPPER_MENU_NO, UPPER_UPPER_MENU_NO) AS
		(
			SELECT
				A.USER_ID,
			    E.MENU_NO,
				E.UPPER_MENU_NO,
				F.UPPER_MENU_NO AS UPPER_UPPER_MENU_NO
				FROM CO_EMPL_BAS A
				LEFT OUTER JOIN CO_EMP_AUTHOR_RLS B ON A.EMPL_NO = B.EMPL_NO
				LEFT OUTER JOIN CO_AUTHOR_BAS C ON B.AUTHOR_NO = C.AUTHOR_NO
				LEFT OUTER JOIN CO_MENU_AUTHOR_RLS D ON C.AUTHOR_NO = D.AUTHOR_NO AND D.INQIRE_AUTHOR_AT = 'Y'
				LEFT OUTER JOIN CO_MENU_BAS E ON D.MENU_NO = E.MENU_NO
				LEFT OUTER JOIN CO_MENU_BAS F ON E.UPPER_MENU_NO = F.MENU_NO
				WHERE 1=1
			<if test="@com.m2m.comm.util.MybatisUtil@isNotEmpty(userId)">
				  AND A.USER_ID = '${userId}'
			</if>
				  AND ISNULL(A.RETIRE_DE, '29991231') >= CONVERT(VARCHAR, GETDATE(), 112)
				  AND ISNULL(C.DELETE_AT,'N') = 'N'
				  AND ISNULL(E.DELETE_AT,'N') = 'N'
			UNION
			SELECT
				DISTINCT
				A.USER_ID
				,F.MENU_NO
				,F.UPPER_MENU_NO
				,G.UPPER_MENU_NO AS UPPER_UPPER_MENU_NO
				FROM CO_EMPL_BAS A
				LEFT OUTER JOIN CO_CTS_BAS B ON A.EMPL_NO = B.EMPL_NO
				LEFT OUTER JOIN CO_DEPT_AUTHOR_RLS C ON B.DEPT_ESNTL_NO = C.DEPT_ESNTL_NO
				LEFT OUTER JOIN CO_AUTHOR_BAS D ON C.AUTHOR_NO = D.AUTHOR_NO
				LEFT OUTER JOIN CO_MENU_AUTHOR_RLS E ON D.AUTHOR_NO = E.AUTHOR_NO AND E.INQIRE_AUTHOR_AT = 'Y'
				LEFT OUTER JOIN CO_MENU_BAS F ON E.MENU_NO = F.MENU_NO
				LEFT OUTER JOIN CO_MENU_BAS G ON F.UPPER_MENU_NO = G.MENU_NO
			WHERE 1=1
			<if test="userId != null and userId != ''">
			  AND A.USER_ID = #{userId}
			</if>
			  AND ISNULL(A.RETIRE_DE, '29991231') >= CONVERT(VARCHAR, GETDATE(), 112)
			  AND ISNULL(C.DELETE_AT,'N') = 'N'
			  AND ISNULL(E.DELETE_AT,'N') = 'N'
		)
		SELECT
			   M.MENU_NO,
			   M.MENU_DC,
			   M.UPPER_MENU_NO,
			   M.MENU_LEVEL,
			   M.MENU_URL,
			   M.MENU_ORDR,
			   M.MENU_NM,
			   A.AUTHOR_NO_LIST
		  FROM CO_MENU_BAS M
		  LEFT OUTER JOIN
		  		(
				 SELECT
						M.MENU_NO,
						STRING_AGG(A.AUTHOR_NO,',') AS AUTHOR_NO_LIST
				   FROM CO_MENU_BAS M
				   JOIN CO_MENU_AUTHOR_RLS A ON M.MENU_NO = A.MENU_NO
				  WHERE 1=1
					AND M.SYS_SE_CODE='BO'
					AND M.DELETE_AT  != 'Y'
					AND M.USE_AT = 'Y'
				  GROUP BY M.MENU_NO
				) A ON M.MENU_NO = A.MENU_NO
		  LEFT OUTER JOIN
		  		(
		  		 SELECT
		  		 * FROM (
						 SELECT DISTINCT MENU FROM USER_MENU_LIST
						UNPIVOT ( MENU FOR USER_IDS IN ([MENU_NO], [UPPER_MENU_NO], [UPPER_UPPER_MENU_NO]) ) AS UNPIVOT_RESULT
						) Z
				  WHERE Z.MENU IS NOT NULL
				) B ON M.MENU_NO = B.MENU
		 WHERE M.SYS_SE_CODE='BO'
		   AND M.DELETE_AT  != 'Y'
		   AND M.USE_AT = 'Y'
		 ORDER BY MENU_ORDR,MENU_LEVEL;
	</select>

</mapper>